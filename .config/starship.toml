# extend default format
format = '''
[┌──>](bold green) $custom$all
[│](bold green) $directory$git_branch$git_status
[└─](bold green)$character'''

# Inserts a blank line between shell prompts
add_newline = true

# Wait 10 milliseconds for starship to check files under the current directory.
scan_timeout = 10

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[cmd_duration]
# Show command duration over 10,000 milliseconds (=10 sec)
format = '\[[took $duration]($style)\]'
min_time = 10_000

[line_break]
disabled = true

[directory]
truncation_length = 6
truncate_to_repo = false
truncation_symbol = "../"

[character]
success_symbol = '[>](bold green)'
error_symbol = '[x](bold red)'
vicmd_symbol = '[<](bold green)'

[git_status]
format = '([$all_status$ahead_behind]($style) )'
conflicted = '=${count} '
ahead = '>${count} '
behind = '<${count} '
diverged = '<>\[<${behind_count} >${ahead_count}\] '
untracked = '?${count} '
stashed = 'S${count} '
modified = '!${count} '
staged = '+${count} '
renamed = 'r${count} '
deleted = 'x${count} '

[git_branch]
format = '[$branch]($style) '
# truncation_length = 20

[custom.taskwarrior-context]
command = 'task _get rc.context'
# ref: https://stackoverflow.com/a/12137501
when = '[ $(task _get rc.context) ]'
format = '[$output]($style) '

[custom.taskwarrior-task]
command = 'task status:pending count'
when = 'true'
format = 'task [$output]($style) '

# preset bracket and plain text
# can't have duplicate module, be careful
[aws]
symbol = 'aws '
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'

[cmake]
symbol = 'cmake '
format = '\[[$symbol($version)]($style)\]'

[cobol]
symbol = 'cobol '
format = '\[[$symbol($version)]($style)\]'

[conda]
symbol = 'conda '
format = '\[[$symbol$environment]($style)\]'

[crystal]
symbol = 'crystal '
format = '\[[$symbol($version)]($style)\]'

[dart]
symbol = 'dart '
format = '\[[$symbol($version)]($style)\]'

[deno]
symbol = 'deno '
format = '\[[$symbol($version)]($style)\]'

[docker_context]
symbol = 'docker '
format = '\[[$symbol$context]($style)\]'

[dotnet]
symbol = '.NET '
format = '\[[$symbol($version)( $tfm)]($style)\]'

[elixir]
symbol = 'elixir '
format = '\[[$symbol($version \(OTP $otp_version\))]($style)\]'

[elm]
symbol = 'elm '
format = '\[[$symbol($version)]($style)\]'

[erlang]
symbol = 'erlang '
format = '\[[$symbol($version)]($style)\]'

[gcloud]
symbol = 'gcloud '
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[golang]
symbol = 'go '
format = '\[[$symbol($version)]($style)\]'

[helm]
symbol = 'helm '
format = '\[[$symbol($version)]($style)\]'

[hg_branch]
symbol = 'hg '
format = '\[[$symbol$branch]($style)\]'

[java]
symbol = 'java '
format = '\[[$symbol($version)]($style)\]'

[julia]
symbol = 'julia '
format = '\[[$symbol($version)]($style)\]'

[kotlin]
symbol = 'kotlin '
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
symbol = 'kubernetes '
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
symbol = 'lua '
format = '\[[$symbol($version)]($style)\]'

[memory_usage]
symbol = 'memory '
format = '\[$symbol[$ram( | $swap)]($style)\]'

[nim]
symbol = 'nim '
format = '\[[$symbol($version)]($style)\]'

[nix_shell]
symbol = 'nix '
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
symbol = 'nodejs '
format = '\[[$symbol($version)]($style)\]'

[ocaml]
symbol = 'ocaml '
format = '\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\]'

[openstack]
symbol = 'openstack '
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[perl]
symbol = 'perl '
format = '\[[$symbol($version)]($style)\]'

[php]
symbol = 'php '
format = '\[[$symbol($version)]($style)\]'

[purescript]
symbol = 'purescript '
format = '\[[$symbol($version)]($style)\]'

[python]
symbol = 'python '
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'

[red]
symbol = 'red '
format = '\[[$symbol($version)]($style)\]'

[ruby]
symbol = 'ruby '
format = '\[[$symbol($version)]($style)\]'

[rust]
symbol = 'rust '
format = '\[[$symbol($version)]($style)\]'

[scala]
symbol = 'scala '
format = '\[[$symbol($version)]($style)\]'

[swift]
symbol = 'swift '
format = '\[[$symbol($version)]($style)\]'

[terraform]
symbol = 'terraform '
format = '\[[$symbol$workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[username]
format = '\[[$user]($style)\]'

[vagrant]
symbol = 'vagrant '
format = '\[[$symbol($version)]($style)\]'

[vlang]
symbol = 'vlang '
format = '\[[$symbol($version)]($style)\]'

[zig]
symbol = 'zig '
format = '\[[$symbol($version)]($style)\]'

# [python]
# format = '[$symbol$version (\($virtualenv\) )]($style)'

# [nodejs]
# format = '[$symbol$version ]($style)'
