#git alias
# ref: https://stackoverflow.com/a/12538667
alias \
	g='git' \
	gd='git diff -p --numstat' \
	gmv='git mv' \
	gcl='git clone' \
	gss='git status -sb' \
	gref='git reflog'

# ref: https://stackoverflow.com/a/30050792 (xargs -a)
alias \
	ga='git add' \
	gaf='git status -s | awk "{print \$2}" | fzf --multi | xargs -r git add' \
	gap='xargs -a <(git status -s | awk "{print \$2}") git add -p' \
	gcf='git status -s | awk "/^[^??]/ {print \$2}" | fzf --multi | xargs -r git checkout'

alias \
	gc='git commit' \
	gca='git commit --amend'

alias \
	gp='git push' \
	gpd='git push --dry-run' \
	ggp='git push -u origin "$(git branch --show-current)"'

alias \
	gb='git branch' \
	gbd='git branch | awk "/^[^*]/" | fzf | xargs -r git branch -D' \
	gbm='git branch -m'

# ref: https://unix.stackexchange.com/questions/141285/using-xargs-with-git
# ref: https://unix.stackexchange.com/a/174717
alias \
	gch='git checkout' \
	gco='git branch | awk "/^[^*+]/" | fzf | xargs -r git checkout' \
	gcb='git checkout -b' \
	gct='git branch -r | fzf | xargs -r git checkout -t'


alias \
	gpl='git pull' \
	ggl='git pull origin "$(git branch --show-current)"'

# ref: https://github.com/wfxr/forgit/blob/b727321f2bd3d79c1dae805441261c45888cbb41/forgit.plugin.zsh#L17-L34
# ref: https://stackoverflow.com/a/1441062
# note: it's better to clear the terminal screen before using this, so that less didn't go to the bottom of the screen.
# note:
# if we use `ctrl-c`, the exit code will be 130, not 0.
# ref: https://stackoverflow.com/a/8977668 (about shell piping).
# ref: https://unix.stackexchange.com/a/14276 (pipestatus in zsh and bash).
function gl() {
	git rev-parse --is-inside-work-tree >/dev/null && git log >/dev/null || return 1
	local files=$(sed -nE 's/.* -- (.*)/\1/p' <<< "$*")
	local cmd="echo {} | grep -Eo '[a-f0-9]+' | head -1 | xargs -I% git show --color=always --format=medium --numstat -p % -- $files"

	git log --oneline --color=always --date=short --format='%C(auto)%h %ad%d%x09%s' | \
		fzf \
		--ansi \
		+m \
		--height=80% \
		--tiebreak=index \
		--reverse \
		--bind "enter:execute($cmd | less -r --incsearch)" \
		--bind "ctrl-y:execute-silent(echo {} | grep -Eo '[a-f0-9]+' | head -1 | tr -d '[:space:]' | xsel --clipboard --input)" \
		--preview="$cmd"
}

alias \
	glo='git log --graph --oneline' \
	glg='git log -g' \
	glp='git log -p' \
	gld='git log --graph --oneline --decorate $(git fsck --no-reflog | awk "/dangling commit/ {print \$3}")'

alias \
	gm='git merge' \
	gmt='git mergetool'

alias \
	grm='git rm' \
	grmc='git rm --cached'

alias \
	gres='git reset'

alias \
	greb='git rebase'

alias \
	gf='git fetch' \
	gfp='git fetch --prune'

alias \
	gwl='git worktree list'

function gwa() {
	local git_root=$(git rev-parse --show-toplevel)
	local git_branch=$(git branch -a | fzf | awk '{print $1}')
	[ ! -z "$git_branch" ] && git worktree add $git_root/.worktree/$git_branch $git_branch || return 0
}

# ref: https://stackoverflow.com/a/47698869 (using awk in shell alias)
alias \
	gwr='git worktree list | fzf | awk "{print \$1}" | xargs -r git worktree remove'

alias \
	gra='git remote add' \
	gru='git remote update' \
	grs='git remote set-url' \
	grv='git remote -v'

alias \
	gst='git stash' \
	gstu='git stash -u' \
	gstp='git stash pop' \
	gstl='git stash list' \
	gstf='git status -s | awk "{print \$2}" | fzf --multi | xargs -r git stash push -u'

alias \
	gcd='cd "$(git rev-parse --show-toplevel)"'

# ref:
# https://twitter.com/diawanchris/status/1531806319014838273
# (default branch of remote repo)
alias \
	gzot='git pull origin main'

# vim:ft=sh
