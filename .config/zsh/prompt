# ref:
# https://salferrarello.com/zsh-git-status-prompt/
# https://github.com/zap-zsh/singularisart-prompt/blob/master/singularisart-prompt.zsh-theme
# https://github.com/zap-zsh/zap-prompt/blob/master/zap-prompt.zsh-theme
# https://gist.github.com/jeebak/2fb31f964669892f6ef457508916bdb3

# enable substitution in the prompt.
# setopt prompt_subst

# autoload zsh add-zsh-hook and vcs_info functions (-U autoload w/o substition, -z use zsh style)
# autoload -Uz add-zsh-hook
# autoload -Uz vcs_info

# disable python venv prompt
VIRTUAL_ENV_DISABLE_PROMPT=1

# _pyv_env_name() {
#   local venv="${VIRTUAL_ENV##*/}"
#   {
#     [ ! -z "$venv" ] && PYV_ENV_NAME="${venv/#/pyv:}"
#   } || {
#     [ ! -z "$PYV_ENV_NAME" ] && unset PYV_ENV_NAME
#   }
# }

# get python venv name before a prompt is displayed (precmd)
# add-zsh-hook precmd _pyv_env_name

# run vcs_info just before a prompt is displayed (precmd)
# add-zsh-hook precmd vcs_info

# ref: https://zsh.sourceforge.io/Doc/Release/User-Contributions.html#vcs_005finfo-Configuration
# zstyle ':vcs_info:*' enable git
# zstyle ':vcs_info:*' use-simple true
# # zstyle ':vcs_info:*' check-for-changes true
# zstyle ':vcs_info:*' check-for-staged-changes true
# zstyle ':vcs_info:*' unstagedstr '%F{red}!%f'
# zstyle ':vcs_info:*' stagedstr '%F{green}+%f'
# zstyle ':vcs_info:git:*' formats ' %F{cyan}%b%f %m%u%c'
# zstyle ':vcs_info:git:*' actionformats ' %B%F{yellow}(%a)%f%%b %F{cyan}%10<..<%b%<<%f %u%c'

# +vi-git-untracked() {
#   if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) = true ] && \
#     git status --porcelain 2>/dev/null | grep -q '^??'; then
#       hook_com[unstaged]+='%F{yellow}?%f'
#   fi
# }

# ref: https://stackoverflow.com/a/53823705
# +vi-git-stash() {
#   if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) = true ] && \
#     git rev-list --quiet refs/stash 2>/dev/null; then
#       hook_com[misc]+='%F{white}$%f'
#   fi
# }

# ref: https://github.com/zsh-users/zsh/blob/bffdbccda69683ce857dfad457e3209c0f00aa0c/Misc/vcs_info-examples#L180-L198
# +vi-git-ahead-behind() {
#   # Exit early in case the worktree is on a detached HEAD
#   # git rev-parse ${hook_com[branch]}@{upstream} >/dev/null 2>&1 || return 0

#   # local -a ahead_and_behind=(
#   #   $(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null)
#   # )

#   # local ahead=${ahead_and_behind[1]}
#   # local behind=${ahead_and_behind[2]}

#   # local -a gitstatus
#   # (( $ahead )) && gitstatus+=( ">${ahead}" )
#   # (( $behind )) && gitstatus+=( "<${behind}" )

#   local track="$(git for-each-ref --format='%(upstream:trackshort)' --count=1 --omit-empty "$(git symbolic-ref -q HEAD)")"

#   # ref: https://zsh.sourceforge.io/Doc/Release/Expansion.html#Parameter-Expansion-Flags
#   # hook_com[misc]+=${(j:/:)gitstatus}
#   hook_com[misc]+=$track
# }

# zstyle ':vcs_info:git*+set-message:*' hooks git-ahead-behind

# shorten path ref: https://unix.stackexchange.com/a/273567
# ansi-c quoting ref: https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html
PROMPT='%F{green}%n%f@%F{green}%M%f '
PROMPT+='%B%F{blue}%(4~|%-1~/../%2~|%~)%f%b'
# PROMPT+='$vcs_info_msg_0_'
# PROMPT+=' $PYV_ENV_NAME'
PROMPT+=$'\n%(?:%F{green}%(!.#.$)%f :%?%F{red}%(!.#.$)%f )'

# vim:ft=zsh
