# ref:
# https://salferrarello.com/zsh-git-status-prompt/
# https://github.com/zap-zsh/singularisart-prompt/blob/master/singularisart-prompt.zsh-theme
# https://github.com/zap-zsh/zap-prompt/blob/master/zap-prompt.zsh-theme
# https://gist.github.com/jeebak/2fb31f964669892f6ef457508916bdb3

# autoload zsh add-zsh-hook and vcs_info functions (-U autoload w/o substition, -z use zsh style)
autoload -Uz add-zsh-hook vcs_info

# enable substitution in the prompt.
setopt prompt_subst

# run vcs_info just before a prompt is displayed (precmd)
add-zsh-hook precmd vcs_info

# ref: https://zsh.sourceforge.io/Doc/Release/User-Contributions.html#vcs_005finfo-Configuration
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' use-simple true
# zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' check-for-staged-changes true
zstyle ':vcs_info:*' unstagedstr '%F{red}!%f'
zstyle ':vcs_info:*' stagedstr '%F{green}+%f'
zstyle ':vcs_info:git:*' formats ' %F{magenta}%b%f %m%u%c'
zstyle ':vcs_info:git:*' actionformats ' %F{yellow}(%a)%f %F{magenta}%10<..<%b%<<%f %u%c'

# +vi-git-untracked() {
#   if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) = true ] && \
#     git status --porcelain 2>/dev/null | grep -q '^??'; then
#       hook_com[unstaged]+='%F{yellow}?%f'
#   fi
# }

# ref: https://stackoverflow.com/a/53823705
+vi-git-stash() {
  if [ $(git rev-parse --is-inside-work-tree 2>/dev/null) = true ] && \
    git rev-list --quiet refs/stash 2>/dev/null; then
      hook_com[misc]+='%F{white}$%f'
  fi
}

# ref: https://github.com/zsh-users/zsh/blob/bffdbccda69683ce857dfad457e3209c0f00aa0c/Misc/vcs_info-examples#L180-L198
+vi-git-ahead-behind() {
  local ahead behind
  local -a gitstatus

  # Exit early in case the worktree is on a detached HEAD
  git rev-parse ${hook_com[branch]}@{upstream} >/dev/null 2>&1 || return 0

  local -a ahead_and_behind=(
    $(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null)
  )

  local ahead=${ahead_and_behind[1]}
  local behind=${ahead_and_behind[2]}

  (( $ahead )) && gitstatus+=( ">${ahead}" )
  (( $behind )) && gitstatus+=( "<${behind} " )

  # ref: https://zsh.sourceforge.io/Doc/Release/Expansion.html#Parameter-Expansion-Flags
  hook_com[misc]+=${(j:/:)gitstatus}
}

zstyle ':vcs_info:git*+set-message:*' hooks git-ahead-behind git-stash

# variables common to all prompt styles
prompt_newline=$'\n%{\r%}'

# add ${vcs_info_msg_0} to the prompt
# e.g. here we add the Git information in red
# shorten path ref: https://unix.stackexchange.com/a/273567
PROMPT='${prompt_newline}'
PROMPT+='%F{yellow}%n@%M%f '
PROMPT+='%F{cyan}%(4~|%-1~/../%2~|%~)%f'
PROMPT+='${vcs_info_msg_0_}'
PROMPT+='${prompt_newline}%(?:%F{green}%(!.#.>)%f :%?%F{red}%(!.#.>)%f )'

# vim:ft=zsh
