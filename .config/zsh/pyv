[ -z $PYV_DIR ] && export PYV_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/pyv"

#python virtual env alias
alias pde='deactivate'

function pve(){
	\ls -l $PYV_DIR | awk '{print $9}' 2> /dev/null || echo 'No python virtual env ever created'
}

#create python virtual env
function pce(){
	local gitroot="$(git rev-parse --show-toplevel 2> /dev/null)"
	local projectdir="${gitroot##*/}"

	if [ "$1" != "" ]; then
		{
			[ -d "$PYV_DIR/$1" ] && echo "$1 python virtual environment already exist"
		} || {
			python -m venv "$PYV_DIR/$1" 2> /dev/null && echo "Created $1 python virtual environment"
		}

	elif [ "$projectdir" != "" ]; then
		{
			[ -d "$PYV_DIR/$projectdir" ] && echo "$projectdir python virtual environment already exist"
		} || {
			python -m venv "$PYV_DIR/$projectdir" 2> /dev/null && echo "Created $projectdir python virtual environment"
		}

	else
		echo "Not git repo, please insert a name for virtual env (for example: pce something-big)"

	fi
}

#remove python virtual env
function pre(){
	local gitroot="$(git rev-parse --show-toplevel 2> /dev/null)"
	local projectdir="${gitroot##*/}"

	if [ "$1" != "" ]; then
		\rm -r "$PYV_DIR/$1" 2> /dev/null && echo "$1 python virtual environment deleted" || \
		echo "No python virtual environment match, nothing deleted"

	elif [ "$projectdir" != "" ]; then
		\rm -r "$PYV_DIR/$projectdir" 2> /dev/null && echo "$projectdir python virutal environment deleted" || \
		echo "No python virtual environment match, nothing deleted"

	else
		echo "No python virtual environment match, nothing deleted"

	fi
}

#activate python virtual env
function pae(){
	local gitroot="$(git rev-parse --show-toplevel 2> /dev/null)"
	local projectdir="${gitroot##*/}"

	if [ "$1" != "" ]; then
		. $PYV_DIR/$1/bin/activate 2> /dev/null || echo "Python virtual environment not found, create new one"

	else
		. $PYV_DIR/$projectdir/bin/activate 2> /dev/null || echo "Python virtual environment not found, create new one"

	fi
}

# vim:ft=sh
