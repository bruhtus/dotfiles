# simple dot files manager

[ -n "$SDFM_GIT_DIR" ] || SDFM_GIT_DIR="$HOME/.local/state/sdfm"
[ -n "$SDFM_GIT_WORKTREE" ] || SDFM_GIT_WORKTREE="$HOME"
[ -n "$SDFM_GIT_REMOTE" ] || SDFM_GIT_REMOTE='origin'
[ -n "$SDFM_GIT_BRANCH" ] || SDFM_GIT_BRANCH='master'

alias sdfm='git --git-dir="$SDFM_GIT_DIR" --work-tree="$SDFM_GIT_WORKTREE"'
alias sdfc='git --git-dir="$SDFM_GIT_DIR" --work-tree="$SDFM_GIT_WORKTREE" commit'
alias sdfp='git --git-dir="$SDFM_GIT_DIR" --work-tree="$SDFM_GIT_WORKTREE" push'

sdfi() {
  {
    [ -d "${SDFM_GIT_DIR%/*}" ] || mkdir -pv "${SDFM_GIT_DIR%/*}"
  } || return "$?"

  {
    [ -d "${SDFM_GIT_WORKTREE%/*}" ] || mkdir -pv "${SDFM_GIT_WORKTREE%/*}"
  } || return "$?"

  [ -d "$SDFM_GIT_DIR" ] || {
    sdfm init -b "$SDFM_GIT_BRANCH" || return "$?"
      sdfm config status.showUntrackedFiles no || return "$?"
      sdfm config push.autoSetupRemote true || return "$?"
    }

  while getopts :u:fap: option; do
    case $option in
      u)
        [ -n "$(sdfm remote show)" ] || {
          sdfm remote add "$SDFM_GIT_REMOTE" "$OPTARG" || return "$?"
          echo "Remote $SDFM_GIT_REMOTE added"
        }
        ;;
      f)
        echo 'Fetching...'
        sdfm fetch --depth=1 --set-upstream \
          "$SDFM_GIT_REMOTE" "$SDFM_GIT_BRANCH" || return "$?"

        sdfm reset -q "$SDFM_GIT_REMOTE"/"$SDFM_GIT_BRANCH" || return "$?"
        sdfm diff --name-status --diff-filter=M HEAD || return "$?"
        ;;
      a)
        sdfm checkout -- . || return "$?"

        [ "$(sdfm config core.bare)" = false ] || {
          sdfm config core.bare false || return "$?"
        }

        echo 'Last commit applied'
        ;;
      p)
        sdfm checkout -- "$OPTARG" || return "$?"
        sdfm config core.bare true
        ;;
      :)
        echo "Option -$OPTARG requires an argument"
        return 1
        ;;
      ?)
        echo 'Usage: sdfi [-u <url>] [-f] [-a] [-p <path>]'
        return 1
        ;;
    esac
  done
}

sdfa() {
  sdfm add "$@"
}

sdfd() {
  sdfm diff "$@"
}

sdfs() {
  if [ "$(sdfm config core.bare)" = false  ]; then
    sdfm status -s || return "$?"
  else
    sdfm diff --name-status --diff-filter=M HEAD || return "$?"
  fi
}

# vim:ft=sh
